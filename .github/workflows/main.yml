name: Deploy Infrastructure

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: eu-west-1
      EC2_PUBLIC_IP: "18.203.98.63"  # Using our current instance IP

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/devops-project:latest
          provenance: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Import existing resources
        run: |
          cd terraform
          # Import existing security group and instance
          terraform import aws_security_group.web_server sg-0f108ebec9a19226a || true
          terraform import aws_instance.web_server i-04e7af1812f71988f || true

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          cd terraform
          terraform apply -auto-approve

      - name: Set up Python for Ansible
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # Add SSH key scanning with specific key types
          ssh-keyscan -t rsa,ecdsa 18.203.98.63 2>/dev/null >> ~/.ssh/known_hosts || true

      - name: Create dynamic inventory
        run: |
          cd ansible
          echo "[webserver]" > inventory.yml
          echo "${{ env.EC2_PUBLIC_IP }} ansible_user=ec2-user ansible_ssh_private_key_file=~/.ssh/id_rsa" >> inventory.yml
          echo "[all:vars]" >> inventory.yml
          echo "ansible_ssh_common_args='-o StrictHostKeyChecking=no'" >> inventory.yml

      - name: Run Ansible playbook
        run: |
          cd ansible
          ansible-playbook -i inventory.yml playbook.yml
